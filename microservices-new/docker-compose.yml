---
version: '3'
services:
  mongo:
    container_name: mongo
    image: mongo:4.4.14-rc0-focal
    restart: unless-stopped
    ports:
    - "27017:27017"
    expose:
    - "27017"
    volumes:
    - ./mongo-data:/data/db
  
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:19.0.2
    command: ["start-dev", "--import-realm"]
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: mysql
      DB_DATABASE: keycloak
      DB_USER: root
      DB_PASSWORD: admin
      ports:
        - "8080:8080"
      volumes:
        - ./realms/:/var/lib/mysql/keycloak/data/import

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
      
  discovery-server:
    image: ataru04/discovery-server:latest
    pull_policy: always
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin

  api-gateway:
    image: ataru04/api-gateway:latest
    container_name: api-gateway
    pull_policy: always
    ports:
      - "8181:8080"
    expose:
      - "8181"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY=TRACE
    depends_on:
      - zipkin
      - discovery-server
      - keycloak
  
  product-service:
    image: ataru04/product-service:latest
    container_name: product-service
    pull_policy: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mongo
      - discovery-server
      - api-gateway
      
  order-service:
    container_name: order-service
    image: ataru04/order-service:latest
    pull_policy: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://localhost:3306/order-service
    depends_on:
      - broker
      - zipkin
      - discovery-server
      - api-gateway

   inventory-service:
     container_name: inventory-service
     image: ataru04/inventory-service:latest
     pull_policy: always
     environment:
       - SPRING_PROFILES_ACTIVE=docker
       - SPRING_DATASOURCE_URL=jdbc:mysql://localhost:3306/inventory-service
     depends_on:
       - discovery-server
       - api-gateway

   notification-service:
     container_name: notification-service
     image: ataru04/notification-service:latest
     pull_policy: always
  	 environment:
       - SPRING_PROFILES_ACTIVE=docker
  	 depends_on:
  	   - zipkin
  	   - broker
  	   - discovery-server
  	   - api-gateway
  	   
    ## Prometheus
    prometheus:
      image: prom/prometheus:v2.37.1
      container_name: prometheus
      restart: unless-stopped
      ports:
        - "9090:9090"
      volumes:
        - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      depends_on:
        - product-service
        - inventory-service
        - order-service
        - notification-service
  	
  	grafana:
  	  image: grafana/grafana-oss:8.5.2
  	  container_name: grafana
  	  restart: unless-stopped
  	  ports:
  	    - "3000:3000"
  	  links:
  	    - prometheus:prometheus
  	  volumes:
  	    - ./grafana:/var/lib/grafana
  	  environment:
  	    - GF_SECURITY_ADMIN_USER=admin
  	    - GF_SECURITY_ADMIN_PASSWORD=password
  	    